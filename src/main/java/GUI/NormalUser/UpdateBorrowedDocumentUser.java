package GUI.NormalUser;

import main_class.Document;
import main_class.NormalUser;

import Database_connection.DatabaseManager;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import java.awt.*;

/**
 * @author Quach Quang
 */
public class UpdateBorrowedDocumentUser extends javax.swing.JFrame {

  Document document;
  DatabaseManager dbManager = new DatabaseManager();
  private String idUser;

  /**
   * Creates new form UpdateBorrowedDocumentUser
   */
  public UpdateBorrowedDocumentUser(String idUser) {
    initComponents();
    this.idUser = idUser;
    dbManager = new DatabaseManager();
    jPanel1.setBackground(Color.WHITE);
    setLocationRelativeTo(null);
    setSize(750, 450);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    bookTitleLabel = new javax.swing.JLabel();
    bookTitleTextField = new javax.swing.JTextField();
    checkButton = new javax.swing.JButton();
    numberOfCopiesAvailableLabel2 = new javax.swing.JLabel();
    authorLabel2 = new javax.swing.JLabel();
    backButton = new javax.swing.JButton();
    borrowButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(255, 0, 0));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Mượn Sách");

    bookTitleLabel.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    bookTitleLabel.setText("Tên sách");

    bookTitleTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    bookTitleTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bookTitleTextFieldActionPerformed(evt);
      }
    });

    checkButton.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    checkButton.setText("Check");
    checkButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        checkButtonActionPerformed(evt);
      }
    });

    numberOfCopiesAvailableLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    numberOfCopiesAvailableLabel2.addAncestorListener(new javax.swing.event.AncestorListener() {
      public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
      }

      public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
      }

      public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
      }
    });

    authorLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    authorLabel2.addAncestorListener(new javax.swing.event.AncestorListener() {
      public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
      }

      public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
      }

      public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
      }
    });

    backButton.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    backButton.setMnemonic('B');
    backButton.setText("Back");
    backButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        backButtonActionPerformed(evt);
      }
    });

    borrowButton.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    borrowButton.setText("Mượn");
    borrowButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        borrowButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(
                            javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(borrowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(authorLabel2, javax.swing.GroupLayout.Alignment.LEADING,
                            javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING,
                            javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING,
                            jPanel1Layout.createSequentialGroup()
                                .addComponent(bookTitleLabel,
                                    javax.swing.GroupLayout.PREFERRED_SIZE, 102,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bookTitleTextField,
                                    javax.swing.GroupLayout.PREFERRED_SIZE, 448,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(checkButton, javax.swing.GroupLayout.DEFAULT_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING,
                            jPanel1Layout.createSequentialGroup()
                                .addComponent(numberOfCopiesAvailableLabel2,
                                    javax.swing.GroupLayout.PREFERRED_SIZE, 697,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1, Short.MAX_VALUE)))
                    .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                            false)
                        .addComponent(bookTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                            37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkButton, javax.swing.GroupLayout.Alignment.TRAILING,
                            javax.swing.GroupLayout.PREFERRED_SIZE, 33,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(authorLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(numberOfCopiesAvailableLabel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                    43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92,
                    Short.MAX_VALUE)
                .addGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                            false)
                        .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40,
                            Short.MAX_VALUE)
                        .addComponent(borrowButton, javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>

  private void bookTitleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
    // Kiểm tra nếu ô nhập liệu bị rỗng
    if (bookTitleTextField.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "Vui lòng nhập tiêu đề hoặc mã tài liệu", "Lỗi",
          JOptionPane.ERROR_MESSAGE);
      return;
    }

    Document document = dbManager.findDocument(bookTitleTextField.getText());

    // Hiển thị thông tin tài liệu hoặc thông báo lỗi
    if (document != null) {
      authorLabel2.setText("Tên tác giả: " + document.getAuthor());
      numberOfCopiesAvailableLabel2.setText("Số bản còn lại: " + document.getCopiesAvailable());
    } else {
      JOptionPane.showMessageDialog(this, "Không tìm thấy tài liệu với tiêu đề hoặc mã đã nhập.",
          "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
  }

  private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {
    bookTitleTextFieldActionPerformed(evt);
  }

  private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    MainViewUser mainViewUser = new MainViewUser(idUser);
    mainViewUser.setVisible(true);
    this.dispose();
  }

  private void borrowedDocumentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void borrowButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // Lấy tiêu đề sách từ trường nhập liệu
    String bookTitle = bookTitleTextField.getText();

    // Kiểm tra nếu người dùng không nhập gì
    if (bookTitle.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Vui lòng nhập tiêu đề tài liệu!", "Lỗi",
          JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Tìm tài liệu dựa trên tiêu đề
    document = dbManager.findDocument(bookTitle);

    // Kiểm tra nếu tài liệu không tồn tại
    if (document == null) {
      JOptionPane.showMessageDialog(this, "Không tìm thấy tài liệu cần mượn!", "Lỗi",
          JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Kiểm tra nếu số lượng bản sao khả dụng là 0
    if (document.getCopiesAvailable() <= 0) {
      JOptionPane.showMessageDialog(this, "Tài liệu đã hết bản sao sẵn có!", "Thông báo",
          JOptionPane.WARNING_MESSAGE);
      return;
    }

    // Tìm thông tin người dùng
    NormalUser user = dbManager.findNormalUser(idUser);
    if (user == null) {
      JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin người dùng!", "Lỗi",
          JOptionPane.ERROR_MESSAGE);
      return;
    }

    // Kiểm tra nếu người dùng đã mượn tài liệu này
    if (user.checkBorrowedDocument(document.getTitle())) {
      JOptionPane.showMessageDialog(this, "Bạn đã mượn tài liệu này rồi!", "Thông báo",
          JOptionPane.INFORMATION_MESSAGE);
      return;
    }

    // Giảm số lượng bản sao khả dụng
    int newCopiesAvailable = document.getCopiesAvailable() - 1;

    // Cập nhật thông tin mượn tài liệu
    try {
      // Thêm tài liệu vào danh sách mượn
      user.addBorrowedDocument(document);

      // Cập nhật số lượng bản sao trong cơ sở dữ liệu
      dbManager.updateDocument(bookTitle, newCopiesAvailable);
      dbManager.addBorrowedDocument(idUser, bookTitle);

      JOptionPane.showMessageDialog(this, "Mượn tài liệu thành công!", "Thông báo",
          JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật cơ sở dữ liệu!", "Lỗi",
          JOptionPane.ERROR_MESSAGE);
      e.printStackTrace(); // In lỗi ra console để debug
    }
  }


  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(UpdateBorrowedDocumentUser.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(UpdateBorrowedDocumentUser.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(UpdateBorrowedDocumentUser.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(UpdateBorrowedDocumentUser.class.getName())
          .log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new UpdateBorrowedDocumentUser("24022294").setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify
  private javax.swing.JLabel authorLabel2;
  private javax.swing.JButton backButton;
  private javax.swing.JLabel bookTitleLabel;
  private javax.swing.JTextField bookTitleTextField;
  private javax.swing.JButton borrowButton;
  private javax.swing.JButton checkButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel numberOfCopiesAvailableLabel2;
  // End of variables declaration
}
